// Code generated by protoc-gen-go. DO NOT EDIT.
// source: practice.proto

package practice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayHelloToWorldRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloToWorldRequest) Reset()         { *m = SayHelloToWorldRequest{} }
func (m *SayHelloToWorldRequest) String() string { return proto.CompactTextString(m) }
func (*SayHelloToWorldRequest) ProtoMessage()    {}
func (*SayHelloToWorldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f26ec9f60532c360, []int{0}
}

func (m *SayHelloToWorldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloToWorldRequest.Unmarshal(m, b)
}
func (m *SayHelloToWorldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloToWorldRequest.Marshal(b, m, deterministic)
}
func (m *SayHelloToWorldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloToWorldRequest.Merge(m, src)
}
func (m *SayHelloToWorldRequest) XXX_Size() int {
	return xxx_messageInfo_SayHelloToWorldRequest.Size(m)
}
func (m *SayHelloToWorldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloToWorldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloToWorldRequest proto.InternalMessageInfo

func (m *SayHelloToWorldRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SayHelloToWorldResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloToWorldResponse) Reset()         { *m = SayHelloToWorldResponse{} }
func (m *SayHelloToWorldResponse) String() string { return proto.CompactTextString(m) }
func (*SayHelloToWorldResponse) ProtoMessage()    {}
func (*SayHelloToWorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f26ec9f60532c360, []int{1}
}

func (m *SayHelloToWorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloToWorldResponse.Unmarshal(m, b)
}
func (m *SayHelloToWorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloToWorldResponse.Marshal(b, m, deterministic)
}
func (m *SayHelloToWorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloToWorldResponse.Merge(m, src)
}
func (m *SayHelloToWorldResponse) XXX_Size() int {
	return xxx_messageInfo_SayHelloToWorldResponse.Size(m)
}
func (m *SayHelloToWorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloToWorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloToWorldResponse proto.InternalMessageInfo

func (m *SayHelloToWorldResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SayHelloToWorldRequest)(nil), "SayHelloToWorldRequest")
	proto.RegisterType((*SayHelloToWorldResponse)(nil), "SayHelloToWorldResponse")
}

func init() { proto.RegisterFile("practice.proto", fileDescriptor_f26ec9f60532c360) }

var fileDescriptor_f26ec9f60532c360 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0x4a, 0x4c,
	0x2e, 0xc9, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe1, 0x12, 0x0b, 0x4e,
	0xac, 0xf4, 0x48, 0xcd, 0xc9, 0xc9, 0x0f, 0xc9, 0x0f, 0xcf, 0x2f, 0xca, 0x49, 0x09, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x8c, 0xb9, 0xc4, 0x31, 0x54, 0x17, 0x17, 0xe4, 0xe7, 0x15,
	0xa7, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xc3, 0x74, 0xc0, 0xb8, 0x46,
	0x41, 0x5c, 0x1c, 0x01, 0x50, 0x4b, 0x85, 0xdc, 0xb8, 0xf8, 0xd1, 0x0c, 0x10, 0x12, 0xd7, 0xc3,
	0xee, 0x00, 0x29, 0x09, 0x3d, 0x1c, 0x76, 0x29, 0x31, 0x24, 0xb1, 0x81, 0x5d, 0x6f, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x2a, 0x61, 0x94, 0x6b, 0xcf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PracticeClient is the client API for Practice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PracticeClient interface {
	SayHelloToWorld(ctx context.Context, in *SayHelloToWorldRequest, opts ...grpc.CallOption) (*SayHelloToWorldResponse, error)
}

type practiceClient struct {
	cc *grpc.ClientConn
}

func NewPracticeClient(cc *grpc.ClientConn) PracticeClient {
	return &practiceClient{cc}
}

func (c *practiceClient) SayHelloToWorld(ctx context.Context, in *SayHelloToWorldRequest, opts ...grpc.CallOption) (*SayHelloToWorldResponse, error) {
	out := new(SayHelloToWorldResponse)
	err := c.cc.Invoke(ctx, "/Practice/SayHelloToWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PracticeServer is the server API for Practice service.
type PracticeServer interface {
	SayHelloToWorld(context.Context, *SayHelloToWorldRequest) (*SayHelloToWorldResponse, error)
}

func RegisterPracticeServer(s *grpc.Server, srv PracticeServer) {
	s.RegisterService(&_Practice_serviceDesc, srv)
}

func _Practice_SayHelloToWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHelloToWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PracticeServer).SayHelloToWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Practice/SayHelloToWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PracticeServer).SayHelloToWorld(ctx, req.(*SayHelloToWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Practice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Practice",
	HandlerType: (*PracticeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHelloToWorld",
			Handler:    _Practice_SayHelloToWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "practice.proto",
}
